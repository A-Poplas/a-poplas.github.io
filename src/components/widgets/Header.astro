---
import { Icon } from "astro-icon/components";
import Logo from "~/components/Logo.astro";
import ToggleTheme from "~/components/common/ToggleTheme.astro";
import ToggleMenu from "~/components/common/ToggleMenu.astro";
//import Button from "~/components/ui/Button.astro"
import SocialIcons from "./SocialIcons.astro";

import { getHomePermalink } from "~/utils/permalinks";
import { trimSlash,  } from "~/utils/permalinks"; //getAsset
import type { CallToAction } from "~/types";

//import { SITE } from '~/utils/config';
import { socialIconsData } from "~/navigation";

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = "header",
  links = [],
  //actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  //showRssFeed = false,
  //position = "center",
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    "top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out",
  ]}
  {...isSticky ? { "data-aw-sticky-header":  true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div class:list={["relative text-default py-3 px-3 lg:px-6 mx-auto w-full grid grid-cols-2 lg:grid-cols-3",{"max-w-7xl": !isFullWidth,},]}>
    
    <div class="flex flex-row">
      <a class="flex items-center" href={getHomePermalink()}>
        <Logo />
      </a>
      <!-- Remove -->
      {showToggleTheme && <ToggleTheme class="text-muted dark:text-gray-400 hover:bg-grayishOrange-100 dark:hover:bg-grayishOrange-10 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center ml-2" iconClass="w-6 h-6 lg:w-5 lg:h-5 lg:inline-block" />}
    </div>  
    
    <nav class="items-center lg:justify-self-center lg:w-auto hidden lg:flex text-default overflow-y-auto overflow-x-hidden lg:overflow-y-visible lg:overflow-x-auto lg:mx-5" aria-label="Main navigation">
      <ul class="flex flex-col lg:flex-row lg:self-center w-full lg:w-auto text-xl lg:text-[0.9375rem] tracking-[0.01rem] font-medium mt-4">
          {
            links.map(({ text, href, links }) => (
              <li class={links?.length ? "dropdown" : "max-lg:min-h-10 items-center"}>
                {links?.length ? (
                  <>
                    <button class="hover:text-link dark:hover:text-white px-4 py-3 flex items-center">
                      {text} <Icon name="tabler:chevron-down" class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 inline" />
                    </button>
                    <!-- FIX CLICKABILITY -->
                    <ul class="dropdown-menu lg:backdrop-blur-lg dark:lg:bg-dark rounded lg:absolute pl-4 lg:pl-0 hidden font-medium lg:bg-white/90 lg:min-w-[200px] drop-shadow-xl items-center">
                      {links.map(({ text: text2, href: href2 }) => (
                        <li>
                          <a
                            class:list={[
                              "first:rounded-t last:rounded-b lg:hover:bg-gray-100 hover:text-link dark:hover:text-white dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap",
                              { "aw-link-active" : href2 === currentPath}
                            ]}
                            href={href2}
                          >
                            {text2}
                          </a>
                        </li>
                      ))}
                    </ul>
                  </>
                ) : (
                  <a
                    class:list={[
                      "hover:text-link dark:hover:text-white px-4 py-3 flex items-center",
                      { "aw-link-active": href === currentPath }
                    ]}
                    href={href}
                  >
                    {text}
                  </a>
                )}
              </li>
              <hr class="bg-gray-300 mx-auto last-of-type:hidden" style="width:75%; height:1px; border-width: 0;">
            ))
          }
        </ul>
        <div class="absolute bottom-0 mx-auto w-full"> <!-- Icons in Hamburger (mobile) menu -->
        <div class="flex md:hidden justify-center">
          <SocialIcons {...socialIconsData} iconClass="w-8 h-8"></SocialIcons>
        </div>
        </div>
      </nav>

      <div class="flex items-center justify-self-end">
        <div class="w-auto items-center hidden md:flex">
          <SocialIcons {...socialIconsData} iconClass="lg:w-5 lg:h-5 w-6 h-6" label={true}></SocialIcons>
        </div>
        <div class="lg:hidden">
          <ToggleMenu />
        </div>

  </div>
</header>
